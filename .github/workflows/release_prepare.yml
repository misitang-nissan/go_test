name: 'Release: Prepare'
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Input release version without prefix "v"'
        required: true

jobs:
  make-branch:
    runs-on: macos-latest #if there is resource?

    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.NML_BOT_SSH_KEY }}

      - uses: actions/checkout@v3
        with:
          submodules: recursive
          ssh-key: ${{ secrets.NML_BOT_SSH_KEY }}

      - name: Make branch
        run: |
          git config --local user.name "misitang-nissan"
          git config --local user.email "misi_tang@mail.nissan.co.jp"
          git checkout -b release/${{ github.event.inputs.version }}
          git push --set-upstream origin release/${{ github.event.inputs.version }}

      - name: Project Version Up 
        run: |
          sed -i -e 's/^const VERSION_NAME = "[0-9].[0-9].[0-9]"/const VERSION_NAME = "${{ github.event.inputs.version }}"/g' cmd/main.go
          rm -rf /cmd/main.go-e
          git add .
          git commit --allow-empty -m "Bump up app version to ${{ github.event.inputs.version }}"

      - name: Create pull request
        env:
          # GITHUB_TOKEN: ${{ secrets.NML_BOT_GITHUB_TOKEN_TO_CREATE_PR }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          git push origin release/${{ github.event.inputs.version }}
          gh pr create --title "New Release ver${{ github.event.inputs.version }}" --body "Merge v${{ github.event.inputs.version }} to ${{ github.ref_name }}"

      - name: Create a GitHub Release
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
          tag_name: ${{ github.event.inputs.version }}

        run: gh release create ${{ env.tag_name }} --generate-notes --draft --target release/${{ github.event.inputs.version }}
